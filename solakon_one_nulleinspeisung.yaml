blueprint:
  name: Solakon ONE Nulleinspeisung‚ö° (V162)
  description: |
    **Detaillierte Funktionsbeschreibung: Dynamische Nulleinspeisung mit SOC-Zonenlogik**

    Dieser Blueprint steuert die AC-Ausgangsleistungsbegrenzung (AC-Output-Limit) des Solakon ONE Wechselrichters. Ziel ist eine dynamische **Nulleinspeisung** √ºber einen Proportionalregler (P-Regler) bei gleichzeitiger effizienter Akku-Verwaltung durch eine **dreistufige State-of-Charge (SOC)-Logik**.

    ---
    ### üß† P-Regler & Steuerlogik
    * **Messprinzip (P-Regelung):** Die Regelung erfolgt als **Proportionalregler (P-Regler)** basierend auf dem **Shelly/Netzleistungssensor**-Entit√§t. **WICHTIG:** Es wird davon ausgegangen, dass **positive Werte Netzbezug** und **negative Werte Netzeinspeisung** bedeuten.
      * **Positive Netzleistung (Bezug):** Erh√∂he die AC-Ausgangsleistung.
      * **Negative Netzleistung (Einspeisung):** Reduziere die AC-Ausgangsleistung.
    * **Korrektur-Aggressivit√§t:** Die Reaktionsschnelligkeit wird √ºber den **Anpassungsfaktor** gesteuert.
    * **Leistungsbegrenzung:** Die geregelte Ausgangsleistung ist durch ein **oberes Limit** (`max_active_power_limit`) und ein **hartkodiertes unteres Limit von 0 W** abgesichert.

    ---
    ### üîã Dreistufige SOC-Zonenlogik

    #### 1. Schnelle Regelung & Entladezyklus (SOC > Oberer Schwellenwert ODER Zyklus aktiv)
    * **Bedingung:** Der SOC liegt √ºber dem **Oberen Schwellenwert** (`soc_fast_limit`, Standard: 50%) ODER der Entladezyklus ist bereits aktiv.
    * **Modus:** "INV Discharge (PV Priority)".
    * **Regelung:** **Aggressive P-Regelung** mit einem **Nullpunkt-Offset von 0 W**. Steuert Entladung und exakte Nulleinspeisung.

    #### 2. Batterieschonende Regelung (Zwischen-SOC und PV-Bedingung erf√ºllt)
    * **Bedingung:** Der SOC liegt zwischen dem **Unteren Schwellenwert** (20%) und dem **Oberen Schwellenwert** (50%), und der **Entladezyklus ist inaktiv** (wichtig f√ºr P-Regler Zone 2).
      * **Start:** Umschalten auf **"INV Discharge (PV Priority)"** nur, wenn die **PV-Leistung die PV-Reserve strikt √ºbersteigt**.
      * **Stopp (Schleifenschutz):** Umschalten auf **"Disabled"** und 0 W Limit, falls die PV-Leistung im Betrieb auf oder unter die PV-Reserve f√§llt.
    * **Regelung:** **Aktive P-Regelung** mit verschobenem Nullpunkt und Ladepriorit√§t. Der **Nullpunkt-Offset** (`nulleinspeisung_offset`, Standard: 30 W) verschiebt das Regelziel hin zu leichtem **Netzbezug** (Laden).
    * **PV-Ladepriorit√§t (Dynamisches Oberlimit):** Die Entladeleistung wird dynamisch durch den **kleineren Wert** aus dem P-Regler-Vorschlag und der **verf√ºgbaren PV-Leistung minus der PV-Reserve** begrenzt.

    #### 3. Sicherheitsstopp (SOC <= Unterer Schwellenwert)
    * **Bedingung:** SOC f√§llt unter den **Unteren Schwellenwert** (`soc_conservation_limit`, Standard: 20%).
    * **Modus:** "Disabled".
    * **Aktion:** Die AC-Ausgangsleistung wird sofort auf **0 W** gesetzt und der Entladezyklus beendet.

    ---
    ### üîÑ Zus√§tzliche Steuermechanismen
    * **Optimierter Timeout-Reset bei Modus-Wechsel:** Bevor ein Modus-Wechsel ausgef√ºhrt wird, wird eine **zweistufige Impulsfolge** (`1s` Puls, dann Setzen auf `3599s`) durchgef√ºhrt, um die Annahme des kritischen Modus-Kommandos zu sichern und Timeout-Fehler zu vermeiden.
    * **Timeout-Reset (Kontinuierlich):** Der Remote Control Timeout (max. 3600s) wird in den aktiven Entladezonen (1 und 2) **automatisch auf 3599s zur√ºckgesetzt**, sobald der Countdown unter 120s f√§llt.
    * **Trigger:** Die Automation wird durch √Ñnderungen der Netzleistung und der PV-Leistung (mit 3s Stabilit√§t), √úber- oder Unterschreiten der SOC-Schwellenwerte, Modus-√Ñnderungen und den Remote Timeout Countdown Sensor (< 150s) ausgel√∂st.
  domain: automation
  author: AI-Assistent
  input:
    shelly_grid_power_sensor:
      name: Shelly/Netzleistungs-Sensor (Shelly 3EM o.√§.)
      description: Der Sensor, der die Netzleistung misst. (Muss 'power' device_class haben)
      selector:
        entity:
          filter:
            - domain:
                - sensor
              device_class:
                - power
          multiple: false
    solakon_solar_power_sensor:
      name: Solakon ONE - Solarleistung (PV-Erzeugung)
      description: |
        Der Sensor, der die aktuelle Solarerzeugung in Watt anzeigt. **(Standard-Entit√§t: `sensor.solakon_one_total_pv_power`)**
      default: sensor.solakon_one_total_pv_power
      selector:
        entity:
          filter:
            - domain:
                - sensor
              device_class:
                - power
          multiple: false
    solakon_soc_sensor:
      name: Solakon ONE - Batteriespeicherkapazit√§t (SOC)
      description: |
        Der SOC-Sensor des Solakon ONE (%). **(Standard-Entit√§t: `sensor.solakon_one_battery_soc`)**
      default: sensor.solakon_one_battery_soc
      selector:
        entity:
          domain:
            - sensor
          multiple: false
    solakon_power_limit_number:
      name: Solakon ONE - Ausgangsleistungsregler (AC-Output)
      description: |
        Die Entit√§t zur Steuerung der Lade-/Entladeleistung (Sollwert). **(Standard-Entit√§t: `number.solakon_one_remote_active_power`)**
      default: number.solakon_one_remote_active_power
      selector:
        entity:
          domain:
            - number
          multiple: false
    solakon_mode_select:
      name: Solakon ONE - Betriebsmodus-Auswahl
      description: |
        Die Entit√§t zur Steuerung des Betriebsmodus. **(Standard-Entit√§t: `select.solakon_one_remote_control_mode`)**
      default: select.solakon_one_remote_control_mode
      selector:
        entity:
          domain:
            - select
          multiple: false
    solakon_mode_reset_timer_entity:
      name: Modus-Reset Timer Entit√§t (Solakon ONE - **Setter**)
      description: |
        Die Solakon ONE **Number** Entit√§t, die die Zeit steuert (in Sekunden, max. 3600). Wird zum **Setzen/Zur√ºcksetzen** des Remote Timeout verwendet. **(Standard-Entit√§t: `number.solakon_one_remote_timeout_set`)**
      default: number.solakon_one_remote_timeout_set
      selector:
        entity:
          domain:
            - number
          multiple: false
    solakon_timeout_countdown_sensor:
      name: Remote Timeout Countdown Sensor (Solakon ONE - **Reader**) üü¢
      description: |
        Der **Sensor** oder die **Number** Entit√§t, die den aktuell verbleibenden Countdown-Wert des Remote Timeout in Sekunden anzeigt.
      default: sensor.solakon_one_remote_timeout_countdown
      selector:
        entity:
          filter:
            - domain:
                - sensor
                - number
          multiple: false
    soc_entladezyklus_aktiv:
      name: Entladezyklus-Zustandsspeicher (Input Select/Dropdown)
      description: Input Select Helfer (MUSS die Optionen 'on' und 'off' enthalten).
      default: input_select.soc_entladezyklus_status
      selector:
        entity:
          domain:
            - input_select
          multiple: false
    soc_fast_limit:
      name: SOC-Schwellenwert "Schnelle Regelung" (z.B. 50%)
      default: 50
      description: Der obere SOC-Wert (z.B. 50%). Bei √úberschreitung startet der aggressive Entladezyklus.
      selector:
        number:
          min: 21.0
          max: 100.0
          step: 1.0
          unit_of_measurement: '%'
          mode: slider
    soc_conservation_limit:
      name: SOC-Schwellenwert "Ladepriorit√§t" (z.B. 20%)
      default: 20
      description: Der untere SOC-Wert (z.B. 20%). Bei Unterschreitung wird auf "Disabled" umgeschaltet.
      selector:
        number:
          min: 0.0
          max: 49.0
          step: 1.0
          unit_of_measurement: '%'
          mode: slider
    nulleinspeisung_toleranz:
      name: Toleranzbereich (Halbbreite)
      default: 25
      description: Der zul√§ssige Bereich in Watt um den Null- oder Offset-Punkt.
      selector:
        number:
          min: 10.0
          max: 200.0
          step: 10.0
          unit_of_measurement: W
          mode: slider
    anpassungs_faktor:
      name: Regelfaktor (Korrektur-Geschwindigkeit)
      default: 1.5
      description: Definiert die Aggressivit√§t des P-Reglers.
      selector:
        number:
          min: 0.5
          max: 3.0
          step: 0.1
          mode: slider
    nulleinspeisung_offset:
      name: Nullpunkt-Offset (Neg. erzwingt Bezug)
      default: 30
      description: Negativer Watt-Wert zur Verschiebung des Nullpunktes unterhalb des SOC-Schwellenwerts. (Nur in der schonenden Zone 2 verwendet)
      selector:
        number:
          min: 0.0
          max: 100.0
          step: 10.0
          unit_of_measurement: W
          mode: slider
    pv_charge_reserve:
      name: üîã PV-Ladereserve (Zwischen-SOC)
      default: 50
      description: |
        Die PV-Leistung (in Watt, W), die reserviert werden soll. Dieser Puffer kompensiert
        interne Wechselrichter-Verluste und sichert eine garantierte Akkuladung.
        (Nur in der schonenden Zone 2 verwendet)
      selector:
        number:
          min: 0.0
          max: 500.0
          step: 10.0
          unit_of_measurement: W
          mode: slider
    max_active_power_limit:
      name: Maximale Ausgangsleistung (Hard Limit)
      default: 800
      description: Das absolute Limit f√ºr die AC-Ausgangsleistung in Watt, unabh√§ngig von der Regelung. (Sollte dem Maximalwert Ihres Solakon ONE entsprechen)
      selector:
        number:
          min: 0.0
          max: 1200.0
          step: 10.0
          unit_of_measurement: W
          mode: slider
  source_url: https://github.com/D4nte85/Solakon-One-Nulleinspeisung-Blueprint-homeassistant/blob/main/solakon_one_nulleinspeisung.yaml

mode: queued
max_exceeded: silent

variables:
  solakon_mode: !input solakon_mode_select
  solakon_soc_sensor: !input solakon_soc_sensor
  pv_power_sensor: !input solakon_solar_power_sensor
  grid_power_sensor: !input shelly_grid_power_sensor
  timer_entity: !input solakon_mode_reset_timer_entity
  countdown_sensor: !input solakon_timeout_countdown_sensor
  solakon_power_limit_number: !input solakon_power_limit_number
  soc_start_limit: !input soc_fast_limit
  soc_stop_limit: !input soc_conservation_limit
  tolerance: !input nulleinspeisung_toleranz
  adj_factor: !input anpassungs_faktor
  offset_value: !input nulleinspeisung_offset
  cycle_active_helper: !input soc_entladezyklus_aktiv
  pv_reserve: !input pv_charge_reserve
  max_limit: !input max_active_power_limit

trigger:
  - platform: state
    entity_id: !input shelly_grid_power_sensor
    for:
      seconds: 3
  - platform: state
    entity_id: !input solakon_solar_power_sensor
    for:
      seconds: 3
  - platform: numeric_state
    entity_id: !input solakon_soc_sensor
    above: !input soc_fast_limit
  - platform: numeric_state
    entity_id: !input solakon_soc_sensor
    below: !input soc_conservation_limit
  - platform: state
    entity_id: !input solakon_mode_select
  - platform: numeric_state
    entity_id: !input solakon_timeout_countdown_sensor
    below: 150

condition: []

action:
  - variables:
      soc_value: "{{ states(solakon_soc_sensor) | float(-1) }}"
      timeout_value: "{{ states(countdown_sensor) | int(-1) }}"
      error_log_message: "Solakon ONE Blueprint Fehler:"

  # --- Input-Validierung ---
  - choose:
      # Fall 1: SOC-Schwellenwerte sind ung√ºltig/vertauscht
      - conditions:
          - condition: template
            value_template: "{{ soc_start_limit | float(0) <= soc_stop_limit | float(0) }}"
        sequence:
          - service: system_log.write
            data:
              logger: automation.solakon_zero_export
              level: error
              message: >
                {{ error_log_message }} Der obere SOC-Schwellenwert ({{ soc_start_limit }}%) muss
                gr√∂√üer sein als der untere SOC-Schwellenwert ({{ soc_stop_limit }}%).
                Bitte passen Sie die Werte an. Automation gestoppt.
          - stop: Ung√ºltige Schwellenwerte

      # Fall 2.1: SOC-Sensor
      - conditions:
          - condition: template
            value_template: "{{ soc_value == -1 or states(solakon_soc_sensor) in ['unknown', 'unavailable'] }}"
        sequence:
          - service: system_log.write
            data:
              logger: automation.solakon_zero_export
              level: error
              message: >
                {{ error_log_message }} SOC-Sensor ({{ solakon_soc_sensor }}) ist UNKNOWN/UNAVAILABLE oder hat ung√ºltige Werte. Automation gestoppt.
          - stop: SOC-Entit√§t fehlerhaft

      # Fall 2.2: Remote Timeout Countdown Sensor
      - conditions:
          - condition: template
            value_template: "{{ timeout_value == -1 or states(countdown_sensor) in ['unknown', 'unavailable'] }}"
        sequence:
          - service: system_log.write
            data:
              logger: automation.solakon_zero_export
              level: error
              message: >
                {{ error_log_message }} Remote Timeout Countdown Sensor ({{ countdown_sensor }}) ist UNKNOWN/UNAVAILABLE oder hat ung√ºltige Werte. Automation gestoppt.
          - stop: Timeout-Entit√§t fehlerhaft

      # Fall 2.3: Netzleistungs-Sensor
      - conditions:
          - condition: template
            value_template: "{{ states(grid_power_sensor) in ['unknown', 'unavailable'] }}"
        sequence:
          - service: system_log.write
            data:
              logger: automation.solakon_zero_export
              level: error
              message: >
                {{ error_log_message }} Netzleistungs-Sensor ({{ grid_power_sensor }}) ist UNKNOWN/UNAVAILABLE. Automation gestoppt.
          - stop: Netzleistungs-Entit√§t fehlerhaft

      # Fall 2.4: Ausgangsleistungsregler (Number)
      - conditions:
          - condition: template
            value_template: "{{ states(solakon_power_limit_number) in ['unknown', 'unavailable'] }}"
        sequence:
          - service: system_log.write
            data:
              logger: automation.solakon_zero_export
              level: error
              message: >
                {{ error_log_message }} Ausgangsleistungsregler ({{ solakon_power_limit_number }}) ist UNKNOWN/UNAVAILABLE. Automation gestoppt.
          - stop: Leistungsregler-Entit√§t fehlerhaft

      # Fall 2.5: Betriebsmodus-Auswahl (Select)
      - conditions:
          - condition: template
            value_template: "{{ states(solakon_mode_select) in ['unknown', 'unavailable'] }}"
        sequence:
          - service: system_log.write
            data:
              logger: automation.solakon_zero_export
              level: error
              message: >
                {{ error_log_message }} Betriebsmodus-Auswahl ({{ solakon_mode_select }}) ist UNKNOWN/UNAVAILABLE. Automation gestoppt.
          - stop: Modus-Select-Entit√§t fehlerhaft

    default: []

  - variables:
      cycle_active: "{{ is_state(cycle_active_helper, 'on') }}"
      grid_power: "{{ states(grid_power_sensor) | float(0) }}"
      pv_power: "{{ states(pv_power_sensor) | float(0) }}"
      current_mode: "{{ states(solakon_mode) }}"
      pv_reserve_float: "{{ pv_reserve | float(50) }}"

  # --- MODUS-UMSCHALTUNG UND ZYKLUS-STEUERUNG ---
  - choose:
      # --- 1. Schnelle Regelung & Entladezyklus Start ---
      - conditions:
          - condition: template
            value_template: "{{ soc_value > soc_start_limit | float(50) and not cycle_active }}"
        sequence:
          - service: input_select.select_option
            target:
              entity_id: !input soc_entladezyklus_aktiv
            data:
              option: "on"
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ current_mode != 'INV Discharge (PV Priority)' }}"
                sequence:
                  - service: number.set_value
                    target:
                      entity_id: !input solakon_mode_reset_timer_entity
                    data:
                      value: 1
                  - delay:
                      milliseconds: 300
                  - service: number.set_value
                    target:
                      entity_id: !input solakon_mode_reset_timer_entity
                    data:
                      value: 3599
                  - delay:
                      milliseconds: 300
                  - service: select.select_option
                    target:
                      entity_id: !input solakon_mode_select
                    data:
                      option: INV Discharge (PV Priority)
            default: []

      # --- 2. Sicherheitsstopp Ende & Entladezyklus Stopp ---
      - conditions:
          - condition: template
            value_template: "{{ soc_value <= soc_stop_limit | float(20) and cycle_active }}"
        sequence:
          - service: input_select.select_option
            target:
              entity_id: !input soc_entladezyklus_aktiv
            data:
              option: "off"
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ current_mode != 'Disabled' }}"
                sequence:
                  - service: number.set_value
                    target:
                      entity_id: !input solakon_mode_reset_timer_entity
                    data:
                      value: 1
                  - delay:
                      milliseconds: 300
                  - service: number.set_value
                    target:
                      entity_id: !input solakon_mode_reset_timer_entity
                    data:
                      value: 3599
                  - delay:
                      milliseconds: 300
                  - service: select.select_option
                    target:
                      entity_id: !input solakon_mode_select
                    data:
                      option: Disabled
            default: []
          - service: number.set_value
            target:
              entity_id: !input solakon_power_limit_number
            data:
              value: 0

      # --- 3. Sicherheitsstopp (SOC < Unterer Schwellenwert UND Zyklus Inaktiv) ---
      - conditions:
          - condition: template
            value_template: "{{ soc_value < soc_stop_limit | float(20) and not cycle_active and current_mode != 'Disabled' }}"
        sequence:
          - service: number.set_value
            target:
              entity_id: !input solakon_mode_reset_timer_entity
            data:
              value: 1
          - delay:
              milliseconds: 300
          - service: number.set_value
            target:
              entity_id: !input solakon_mode_reset_timer_entity
            data:
              value: 3599
          - delay:
              milliseconds: 300
          - service: select.select_option
            target:
              entity_id: !input solakon_mode_select
            data:
              option: Disabled
          - service: number.set_value
            target:
              entity_id: !input solakon_power_limit_number
            data:
              value: 0

      # --- 4. Batterieschonende Regelung ---
      - conditions:
          - condition: template
            value_template: "{{ soc_value > soc_stop_limit | float(20) and soc_value <= soc_start_limit | float(50) and not cycle_active }}"
        sequence:
          - choose:
              # --- 4a. START der Schon-Regelung ---
              - conditions:
                  - condition: template
                    value_template: "{{ pv_power > pv_reserve_float and current_mode != 'INV Discharge (PV Priority)' }}"
                sequence:
                  - service: number.set_value
                    target:
                      entity_id: !input solakon_mode_reset_timer_entity
                    data:
                      value: 1
                  - delay:
                      milliseconds: 300
                  - service: number.set_value
                    target:
                      entity_id: !input solakon_mode_reset_timer_entity
                    data:
                      value: 3599
                  - delay:
                      milliseconds: 300
                  - service: select.select_option
                    target:
                      entity_id: !input solakon_mode_select
                    data:
                      option: INV Discharge (PV Priority)
                  - service: number.set_value
                    target:
                      entity_id: !input solakon_power_limit_number
                    data:
                      value: 0

              # --- 4b. STOPP der Schon-Regelung ---
              - conditions:
                  - condition: template
                    value_template: "{{ pv_power <= pv_reserve_float and current_mode == 'INV Discharge (PV Priority)' }}"
                sequence:
                  - service: number.set_value
                    target:
                      entity_id: !input solakon_mode_reset_timer_entity
                    data:
                      value: 1
                  - delay:
                      milliseconds: 300
                  - service: number.set_value
                    target:
                      entity_id: !input solakon_mode_reset_timer_entity
                    data:
                      value: 3599
                  - delay:
                      milliseconds: 300
                  - service: select.select_option
                    target:
                      entity_id: !input solakon_mode_select
                    data:
                      option: Disabled
                  - service: number.set_value
                    target:
                      entity_id: !input solakon_power_limit_number
                    data:
                      value: 0
            default: []

    default: []

  # --- 5. Aktive Regelung (P-Regler und Timeout-Reset) ---
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ current_mode == 'INV Discharge (PV Priority)' }}"
        sequence:
          # 5.1 Timeout-Reset
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ timeout_value < 120 and timeout_value != -1 }}"
                sequence:
                  - service: number.set_value
                    target:
                      entity_id: !input solakon_mode_reset_timer_entity
                    data:
                      value: 1
                  - delay:
                      milliseconds: 300
                  - service: number.set_value
                    target:
                      entity_id: !input solakon_mode_reset_timer_entity
                    data:
                      value: 3599
                  - delay:
                      milliseconds: 300
            default: []

          # 5.2 P-Regelung
          - choose:
              # --- 5.2a Zone 2: Batterieschonend ---
              - conditions:
                  - condition: template
                    value_template: "{{ not cycle_active and soc_value >= soc_stop_limit | float(20) and soc_value <= soc_start_limit | float(50) }}"
                sequence:
                  - variables:
                      offset: "{{ offset_value | float(30)}}"
                      tolerance_high: "{{ offset + tolerance | float(25) }}"
                      tolerance_low: "{{ offset - tolerance | float(25) }}"
                  - condition: template
                    value_template: "{{ grid_power > tolerance_high or grid_power < tolerance_low }}"
                  - variables:
                      current_limit: "{{ states(solakon_power_limit_number) | float(0) }}"
                      reg_abweichung: "{{ grid_power | float(0) - offset | float(30) }}"
                      new_limit_calc: "{{ current_limit + reg_abweichung * adj_factor }}"
                  - service: number.set_value
                    target:
                      entity_id: !input solakon_power_limit_number
                    data:
                      value: >
                        {% set calculated_limit = new_limit_calc | float(0) %}
                        {% set dynamic_pv_limit = max(pv_power - pv_reserve | float(50), 0) %}
                        {% set final_max_limit = min(max_limit | float(800), dynamic_pv_limit) %}
                        {{ max(min(calculated_limit, final_max_limit), 0) | round(0) }}

              # --- 5.2b Zone 1: Aggressiv ---
              - conditions:
                  - condition: template
                    value_template: "{{ cycle_active or soc_value > soc_start_limit | float(50) }}"
                sequence:
                  - variables:
                      offset: 0.0
                      tolerance_high: "{{ offset + tolerance | float(25) }}"
                      tolerance_low: "{{ offset - tolerance | float(25) }}"
                  - condition: template
                    value_template: "{{ grid_power > tolerance_high or grid_power < tolerance_low }}"
                  - variables:
                      current_limit: "{{ states(solakon_power_limit_number) | float(0) }}"
                      reg_abweichung: "{{ grid_power | float(0) - offset | float(0) }}"
                      new_limit_calc: "{{ current_limit + reg_abweichung * adj_factor }}"
                  - service: number.set_value
                    target:
                      entity_id: !input solakon_power_limit_number
                    data:
                      value: "{{ [min(new_limit_calc | float(0), max_limit | float(800)), 0] | max | round(0) }}"

            default: []
    default: []


