blueprint:
  name: Solakon ONE Nulleinspeisung (DE) - Dynamisch & SOC-Gesteuert (Optimiert V196)
  description: |
    **Detaillierte Funktionsbeschreibung: Dynamische Nulleinspeisung mit SOC-Zonenlogik (V196 - Optimiert)**

    Dieser Home Assistant Blueprint implementiert eine **dynamische Nulleinspeisung** f√ºr den Solakon ONE Wechselrichter. Er nutzt einen **PI-Regler (Proportional-Integral-Regler)** zur pr√§zisen Steuerung der AC-Ausgangsleistung und eine **dreistufige State-of-Charge (SOC)-Logik** zur effizienten Verwaltung des Batteriespeichers.

    **Optimierungen in V196:**
    - ‚úÖ PI-Regler statt P-Regler: Eliminiert bleibende Regelabweichung
    - ‚úÖ Rate Limiter: Begrenzt Leistungs√§nderungen f√ºr sanfteres Verhalten
    - ‚úÖ Variables-Split: Berechnungen nur bei aktivem Modus
    - ‚úÖ Zonenwechsel-Logging: Dokumentation aller State-√Ñnderungen
    - ‚úÖ Nachtabschaltung: Optional f√ºr Zone 2
    - ‚úÖ Keine Trigger-Verz√∂gerung: Sofortige Reaktion auf √Ñnderungen

    ---
    ### üß† PI-Regler & Steuerlogik
    Der Kern des Blueprints ist ein **PI-Regler (Proportional-Integral-Regler)**, der das **AC-Output-Limit** (Entladeleistung) dynamisch anpasst.
    
    * **Messprinzip:** Die Regelung basiert auf dem **Shelly/Netzleistungssensor**. **WICHTIG:** Positive Werte = Bezug, NEGATIVE WERTE = Einspeisung.
    
    * **P-Anteil (Proportional):** Reagiert auf die aktuelle Abweichung mit konfigurierbarer Aggressivit√§t (Regelungs-Faktor).
    
    * **I-Anteil (Integral):** Summiert Abweichungen √ºber die Zeit auf und eliminiert bleibende Regelabweichungen. Wird bei Zonenwechseln zur√ºckgesetzt (Anti-Windup).
    
    * **Rate Limiter:** Begrenzt die maximale Leistungs√§nderung pro Zyklus (z.B. ¬±150W) f√ºr sanfteres Verhalten und Hardware-Schonung.
    
    * **Leistungsbegrenzung:** Gesichert durch ein **oberes Hard Limit** und ein **hartkodiertes unteres Limit von 0 W**.

    ---
    ### üîã Dreistufige SOC-Zonenlogik
    Die Logik unterteilt den Batterieladestand (SOC) in drei Zonen:

    #### 1. Zone: Aggressive Regelung (Entladezyklus / Hoher SOC)
    * **Bedingung:** SOC > **Oberer Schwellenwert** (`soc_fast_limit`) **ODER** Entladezyklus aktiv.
    * **Aktion:** **Max. Entladestrom** wird auf den Standardwert (z.B. 40 A) gesetzt.
    * **Regelung:** PI-Regler mit **Nullpunkt-Offset von 0 W** zur exakten Nulleinspeisung.
    * **Verhalten:** Einmal aktiviert, l√§uft Zone 1 bis SOC ‚â§ 20% f√§llt (kein Yo-Yo-Effekt).

    #### 2. Zone: Batterieschonende Regelung (Zwischen-SOC)
    * **Bedingung:** SOC zwischen Unterer (`soc_conservation_limit`) und Oberer Schwelle, UND Entladezyklus inaktiv.
    * **Aktion:** **Max. Entladestrom** wird auf **0 A** gesetzt (Entnahme nur √ºber AC-Limit).
    * **Regelung:** PI-Regler mit **Negativen Nullpunkt-Offset** (z.B. -30 W) zur Verschiebung des Regelziels hin zu leichtem **Netzbezug** (Laden).
    * **Dynamische Obergrenze:** Entladeleistung wird durch **Max(0, PV - Reserve)** gedeckelt.
    * **Nachtabschaltung:** Optional kann Zone 2 bei PV < Schwelle deaktiviert werden (Zone 1 bleibt aktiv).

    #### 3. Zone: Sicherheits-Stopp (Niedriger SOC)
    * **Bedingung:** SOC f√§llt auf oder unter den **Unteren Schwellenwert**.
    * **Aktion:** Sofortiges Umschalten auf **"Disabled"** und Setzen des **AC-Output-Limits auf 0 W**.

    ---
    ### ‚öôÔ∏è Zus√§tzliche Steuermechanismen
    * **Zwei-Stufen-Moduswechsel:** Eine Puls-Sequenz (1s Puls, dann 3599s) wird verwendet, um die Modus-Kommandos zu sichern.
    * **Timeout-Refresh:** Der Remote Timeout wird automatisch auf 3599s zur√ºckgesetzt, wenn der Countdown unter 120s f√§llt.
    * **Integral-Reset:** Bei jedem Zonenwechsel wird der I-Anteil auf 0 zur√ºckgesetzt, um Windup zu verhindern.
    * **Anti-Windup:** Der Integral-Wert ist auf ¬±1000 Punkte begrenzt.
      
  domain: automation
  source_url: https://github.com/D4nte85/Solakon-One-Nulleinspeisung-Blueprint-homeassistant/blob/experimental_battery_discharge_limit/solakon_one_nulleinspeisung.yaml
  input:
    # ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
    # üîå NETZ-SENSOR (Extern - z.B. Shelly 3EM)
    # ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
    
    grid_power_sensor:
      name: üîå Shelly/Netz-Leistungssensor (ERFORDERLICH)
      description: |
        Sensor f√ºr die aktuelle Netzleistung (z.B. Shelly 3EM).
        ‚ö†Ô∏è WICHTIG: Positive Werte = Bezug, NEGATIVE WERTE = Einspeisung.
      selector:
        entity:
          domain: sensor
          device_class: power
    
    # ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
    # ‚ö° SOLAKON ONE - ENTIT√ÑTEN
    # ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
    
    solar_power_sensor:
      name: ‚òÄÔ∏è Solakon ONE - Solarleistung (PV-Erzeugung)
      description: Die aktuelle PV-Gesamterzeugung in Watt.
      default: sensor.solakon_one_total_pv_power
      selector:
        entity:
          domain: sensor
          device_class: power
    
    soc_sensor:
      name: üîã Solakon ONE - Batterieladestand (SOC)
      description: Der aktuelle Batterieladestand in %.
      default: sensor.solakon_one_battery_soc
      selector:
        entity:
          domain: sensor
          device_class: battery
    
    remote_timeout_countdown_sensor:
      name: ‚è±Ô∏è Solakon ONE - Remote Timeout Countdown
      description: Sensor, der den verbleibenden Timeout-Countdown anzeigt.
      default: sensor.solakon_one_remote_timeout_countdown
      selector:
        entity:
          domain: sensor
    
    active_power_number:
      name: ‚öôÔ∏è Solakon ONE - Ausgangsleistungsregler
      description: Die Entit√§t zum Setzen des Leistungs-Sollwerts (Remote Active Power).
      default: number.solakon_one_remote_active_power
      selector:
        entity:
          domain: number
    
    max_discharge_current_number:
      name: üîã Solakon ONE - Max. Entladestrom
      description: Die Entit√§t zur Steuerung des maximalen Entladestroms (A).
      default: number.solakon_one_battery_max_discharge_current
      selector:
        entity:
          domain: number
    
    remote_timeout_set_number:
      name: ‚è≤Ô∏è Solakon ONE - Modus-Reset-Timer
      description: Dient zum Setzen/Zur√ºcksetzen des Remote-Timeouts (max. 3599 s).
      default: number.solakon_one_remote_timeout_set
      selector:
        entity:
          domain: number
    
    mode_select:
      name: üîÑ Solakon ONE - Betriebsmodus-Auswahl
      description: Die Entit√§t zum Umschalten des Betriebsmodus (Remote Control Mode).
      default: select.solakon_one_remote_control_mode
      selector:
        entity:
          domain: select
    
    # ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
    # üõ†Ô∏è HOME ASSISTANT HELPER (ERFORDERLICH!)
    # ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
    
    cycle_active_input_select:
      name: üõ†Ô∏è Entladezyklus-Zustandsspeicher (input_select - ERFORDERLICH!)
      description: |
        ‚ö†Ô∏è WICHTIG: Erstellen Sie einen Input Select Helfer mit den Optionen 'on' und 'off'.
        Settings ‚Üí Devices & Services ‚Üí Helpers ‚Üí Create Helper ‚Üí Dropdown
        - Name: z.B. 'SOC Entladezyklus Status'
        - Options: 'on' und 'off' (exakt so!)
        
        Dieser speichert, ob der Entladezyklus aktiv ist (Zone 1).
      default: input_select.soc_entladezyklus_status
      selector:
        entity:
          domain: input_select
    
    integral_helper:
      name: üõ†Ô∏è Integral-Speicher (input_number - ERFORDERLICH!)
      description: |
        ‚ö†Ô∏è WICHTIG: Erstellen Sie einen input_number Helper f√ºr den PI-Regler:
        Settings ‚Üí Devices & Services ‚Üí Helpers ‚Üí Create Helper ‚Üí Number
        - Name: z.B. 'Solakon Integral'
        - Min: -1000
        - Max: 1000
        - Step: 1
        - Initial: 0
        
        Dieser speichert den I-Anteil des PI-Reglers.
      default: input_number.solakon_integral
      selector:
        entity:
          domain: input_number
    
    # ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
    # üéöÔ∏è REGELUNGS-PARAMETER
    # ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
    # ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
    # üéöÔ∏è REGELUNGS-PARAMETER
    # ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
    
    regulator_factor:
      name: üéõÔ∏è P-Faktor (Proportional-Verst√§rkung)
      description: |
        P-Anteil des PI-Reglers: Reagiert auf aktuelle Abweichung (z.B. 1.5).
        H√∂her = schnellere, aggressivere Reaktion | Niedriger = sanftere Reaktion
      default: 1.5
      selector:
        number:
          min: 0.1
          max: 5
          step: 0.1
    
    ki_factor:
      name: üéõÔ∏è I-Faktor (Integral-Verst√§rkung)
      description: |
        I-Anteil des PI-Reglers: Eliminiert bleibende Abweichungen (z.B. 0.05).
        H√∂her = schnellere Korrektur, aber instabiler | Niedriger = langsamer, stabiler
      default: 0.05
      selector:
        number:
          min: 0.01
          max: 0.2
          step: 0.01
    
    tolerance:
      name: üìè Toleranzbereich (Totband)
      description: |
        Bereich in Watt um den Nullpunkt, in dem KEINE Korrektur stattfindet (z.B. ¬±25 W).
        Verhindert permanente Mini-Korrekturen bei stabiler Regelung.
      default: 25
      selector:
        number:
          min: 0
          max: 200
          unit_of_measurement: W
    
    max_power_change_per_cycle:
      name: ‚ö° Rate Limiter (Max. √Ñnderung pro Zyklus)
      description: |
        Begrenzt Leistungsspr√ºnge f√ºr sanfteres Verhalten (z.B. 150 W).
        Schont Hardware (Relais, Kontakte) und verbessert Netzvertr√§glichkeit.
      default: 150
      selector:
        number:
          min: 50
          max: 500
          unit_of_measurement: W
    
    # ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
    # üîã SOC-ZONEN-PARAMETER
    # ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
    
    soc_fast_limit:
      name: üîã SOC-Schwelle "Zone 1 Start" (Aggressive Entladung)
      description: |
        Obere Schwelle (z.B. 50 %).
        √úberschreiten aktiviert Zone 1 (aggressive Entladung mit 40A).
        Zone 1 l√§uft dann bis SOC ‚â§ 20% f√§llt (kein Yo-Yo-Effekt).
      default: 50
      selector:
        number:
          min: 1
          max: 99
          unit_of_measurement: "%"
    
    soc_conservation_limit:
      name: üîã SOC-Schwelle "Zone 3 Stopp" (Sicherheits-Grenze)
      description: |
        Untere Schwelle (z.B. 20 %).
        Unterschreiten stoppt die Entladung komplett (Zone 3 = Disabled).
      default: 20
      selector:
        number:
          min: 1
          max: 99
          unit_of_measurement: "%"
    
    default_discharge_current:
      name: üîã Max. Entladestrom in Zone 1 (Ampere)
      description: |
        Maximaler Entladestrom in Zone 1 (aggressive Entladung, z.B. 40 A).
        In Zone 2 wird automatisch 0 A gesetzt (batterieschonend).
      default: 40
      selector:
        number:
          min: 0
          max: 50
          unit_of_measurement: A
    
    # ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
    # ‚öôÔ∏è ZONE 2 - PARAMETER (Batterieschonender Modus)
    # ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
    
    offset:
      name: ‚öôÔ∏è Zone 2 - Nullpunkt-Offset (Regelziel)
      description: |
        Zielwert f√ºr Netzleistung in Zone 2 (z.B. -30 W).
        Negativer Wert = leichter Netzbezug erw√ºnscht ‚Üí Batterie wird geladen.
        0 W = Exakte Nulleinspeisung (wie Zone 1).
      default: -30
      selector:
        number:
          min: -200
          max: 0
          unit_of_measurement: W
    
    pv_charge_reserve:
      name: ‚öôÔ∏è Zone 2 - PV-Ladereserve
      description: |
        PV-Leistung, die in Zone 2 f√ºr Ladung reserviert wird (z.B. 50 W).
        Dynamische Obergrenze: Max. Entladung = PV - Reserve.
        Stellt sicher, dass Batterie auch bei Trickle-Charge geladen wird.
      default: 50
      selector:
        number:
          min: 0
          max: 1000
          unit_of_measurement: W
    
    # ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
    # üîí SICHERHEITS-PARAMETER
    # ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
    
    max_active_power_limit:
      name: üîí Maximale Ausgangsleistung (Hard Limit)
      description: |
        Absolute Obergrenze der AC-Ausgangsleistung (z.B. 800 W).
        Sch√ºtzt vor √úberlastung des Wechselrichters.
      default: 800
      selector:
        number:
          min: 0
          max: 1000
          unit_of_measurement: W
    
    # ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
    # üåô NACHTABSCHALTUNG (Optional)
    # ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
    
    night_shutdown_enabled:
      name: üåô Nachtabschaltung aktivieren
      description: |
        Deaktiviert Zone 2 nachts automatisch (bei PV < Schwelle).
        ‚ö†Ô∏è Zone 1 (aggressive Entladung) l√§uft auch nachts weiter!
        Sinnvoll f√ºr Batterieschonung bei 0 PV.
      default: false
      selector:
        boolean:
    
    night_shutdown_pv_threshold:
      name: üåô PV-Schwelle f√ºr "Nacht"
      description: |
        Unterhalb dieser PV-Leistung gilt es als Nacht (z.B. 10 W).
        Nur relevant wenn Nachtabschaltung aktiviert ist.
      default: 10
      selector:
        number:
          min: 0
          max: 100
          unit_of_measurement: W
    
mode: queued
max_exceeded: silent

variables:
  # ===========================================
  # BLOCK 1: Variablen f√ºr Conditions & Modus-Logik
  # (Werden IMMER ben√∂tigt)
  # ===========================================
  
  # Zonen-Schwellwerte
  soc_fast_limit_int: !input soc_fast_limit
  soc_conservation_limit_int: !input soc_conservation_limit
  
  # Aktuelle Sensorwerte f√ºr Conditions
  soc: !input soc_sensor
  timeout_countdown: !input remote_timeout_countdown_sensor
  solakon_mode: !input mode_select
  cycle_active: !input cycle_active_input_select
  
  # Nachtabschaltung Config
  night_shutdown_enabled_bool: !input night_shutdown_enabled
  night_pv_threshold: !input night_shutdown_pv_threshold
  solar_power_for_night_check: !input solar_power_sensor
  
  # PI-Regler Helper
  integral_entity: !input integral_helper
  
  # Entit√§ten
  active_power_entity: !input active_power_number
  discharge_current_entity: !input max_discharge_current_number
  timeout_set_entity: !input remote_timeout_set_number
  
  # Parameter
  discharge_current_max: !input default_discharge_current

trigger:
  # -------------------------------------------------------------------------------------------------
  # 1. Leistungs√§nderungen (Ohne Verz√∂gerung f√ºr schnelle PI-Regelung)
  # -------------------------------------------------------------------------------------------------
  - platform: state
    entity_id: !input grid_power_sensor
    id: grid_power_change

  - platform: state
    entity_id: !input solar_power_sensor
    id: solar_power_change

  # -------------------------------------------------------------------------------------------------
  # 2. SOC-Schwellwert-Erreichung (Steuert Zonen-Wechsel)
  # -------------------------------------------------------------------------------------------------
  - platform: numeric_state
    entity_id: !input soc_sensor
    above: !input soc_fast_limit
    id: soc_high

  - platform: numeric_state
    entity_id: !input soc_sensor
    below: !input soc_conservation_limit
    id: soc_low

  # -------------------------------------------------------------------------------------------------
  # 3. Modus-Wechsel (Reagiert auf manuelle/externe √Ñnderung)
  # -------------------------------------------------------------------------------------------------
  - platform: state
    entity_id: !input mode_select
    id: mode_change

action:
  # -------------------------------------------------------------------------------------------------
  # VALIDIERUNG: Check auf kritische Fehler (Werte und Entit√§ten)
  # -------------------------------------------------------------------------------------------------
  - choose:
    # PR√úFUNG A: SOC-Limits
    - conditions:
        - condition: template
          value_template: "{{ soc_fast_limit_int <= soc_conservation_limit_int }}"
      sequence:
        - service: system_log.write
          data:
            level: error
            message: "Solakon ONE Blueprint Fehler Die obere SOC-Schwelle ({{ soc_fast_limit_int }}%) muss gr√∂√üer sein als die untere SOC-Schwelle ({{ soc_conservation_limit_int }}%). Automatisierung gestoppt."
        - stop: Die SOC-Limits sind falsch gesetzt.
          
    # PR√úFUNG B: Kritische Entit√§ten verf√ºgbar
    - conditions:
        - condition: or
          conditions:
            # SOC und Timeout-Countdown: Pr√ºfe direkt auf 'unknown'/'unavailable'
            - condition: template
              value_template: >
                {{ is_state(soc, 'unknown') or is_state(soc, 'unavailable') or
                   is_state(timeout_countdown, 'unknown') or is_state(timeout_countdown, 'unavailable') }}
            # Grid Power: Wird sp√§ter gepr√ºft (nach Variables)
            # Modus-Selektor
            - condition: template
              value_template: "{{ is_state(solakon_mode, 'unknown') or is_state(solakon_mode, 'unavailable') }}"
            # Active Power Number
            - condition: template
              value_template: "{{ state_attr(active_power_entity, 'min') is none }}"
      sequence:
        - service: system_log.write
          data:
            level: error
            message: "Solakon ONE Blueprint Fehler Eine oder mehrere kritische Entit√§ten (SOC, Timeout-Sensor, Ausgangsleistungsregler) sind UNVERF√úGBAR oder haben ung√ºltige Werte. Automatisierung gestoppt."
        - stop: Kritische Entit√§ten sind fehlerhaft.
          
    default:
      # -------------------------------------------------------------------------------------------------
      # HAUPT-LOGIK: Modus- und Zyklus-Steuerung (Zone 1, 2, 3)
      # -------------------------------------------------------------------------------------------------
      - choose:
          # FALL A: ZONE 1 - Aggressive Entladung START (SOC > Obere Schwelle UND Zyklus OFF)
          - conditions:
              - condition: template
                value_template: "{{ states(soc) | float(0) > soc_fast_limit_int }}"
              - condition: state
                entity_id: !input cycle_active_input_select
                state: 'off'
            sequence:
              # Logging
              - service: logbook.log
                data:
                  name: Solakon Zonenwechsel
                  message: "üîã Zone 1 aktiviert (Aggressive Entladung) - SOC: {{ states(soc) }}%"
                  entity_id: !input soc_sensor
              # Integral zur√ºcksetzen bei Zonenwechsel
              - service: input_number.set_value
                data:
                  entity_id: !input integral_helper
                  value: 0
              # 1. Zyklus auf 'on' setzen
              - service: input_select.select_option
                data:
                  entity_id: !input cycle_active_input_select
                  option: 'on'
              - service: input_number.set_value
                data:
                  entity_id: !input integral_helper
                  value: 0
              # 2. Modus-Wechsel zu 'INV Discharge PV Priority' (mit Puls-Sequenz zur Sicherheit)
              - choose:
                  - conditions: "{{ states(solakon_mode) != 'INV Discharge (PV Priority)' }}"
                    sequence:
                      - service: number.set_value
                        data:
                          entity_id: !input remote_timeout_set_number
                          value: 1
                      - delay: '00:00:01' 
                      - service: number.set_value
                        data:
                          entity_id: !input remote_timeout_set_number
                          value: 3599
                      - service: select.select_option
                        data:
                          entity_id: !input mode_select
                          option: 'INV Discharge (PV Priority)'
          
          # FALL E: NACHT-ABSCHALTUNG (Nur Zone 2 betroffen)
          - conditions:
              # Nachtabschaltung aktiviert
              - condition: template
                value_template: "{{ night_shutdown_enabled_bool }}"
              # Es ist Nacht (PV unter Schwelle)
              - condition: template
                value_template: "{{ (states(solar_power_for_night_check) | float(0)) < night_pv_threshold }}"
              # Nur in Zone 2 (cycle = off)
              - condition: state
                entity_id: !input cycle_active_input_select
                state: 'off'
              # Modus ist aktuell aktiv
              - condition: template
                value_template: "{{ states(solakon_mode) == 'INV Discharge (PV Priority)' }}"
            sequence:
              # Logging
              - service: logbook.log
                data:
                  name: Solakon Nachtmodus
                  message: "üåô Nachtabschaltung aktiviert (Zone 2) - PV: {{ states(solar_power_for_night_check) }}W"
                  entity_id: !input solar_power_sensor
              # Integral zur√ºcksetzen
              - service: input_number.set_value
                data:
                  entity_id: !input integral_helper
                  value: 0
              - service: input_number.set_value
                data:
                  entity_id: !input integral_helper
                  value: 0
              - service: input_number.set_value
                data:
                  entity_id: !input integral_helper
                  value: 0
              # Modus auf 'Disabled' setzen
              - service: number.set_value
                data:
                  entity_id: !input remote_timeout_set_number
                  value: 1
              - delay: '00:00:01'
              - service: number.set_value
                data:
                  entity_id: !input remote_timeout_set_number
                  value: 3599
              - service: select.select_option
                data:
                  entity_id: !input mode_select
                  option: 'Disabled'
              # Power Limit auf 0 W
              - service: number.set_value
                data:
                  entity_id: !input active_power_number
                  value: 0

          # FALL B: ZONE 3 - Sicherheits-STOPP (SOC <= Untere Schwelle UND Zyklus ON)
          - conditions:
              - condition: template
                value_template: "{{ states(soc) | float(0) <= soc_conservation_limit_int }}"
              - condition: state
                entity_id: !input cycle_active_input_select
                state: 'on'
            sequence:
              # Logging
              - service: logbook.log
                data:
                  name: Solakon Zonenwechsel
                  message: "üõë Zone 3 aktiviert (Sicherheits-Stopp) - SOC: {{ states(soc) }}%"
                  entity_id: !input soc_sensor
              # Integral zur√ºcksetzen
              - service: input_number.set_value
                data:
                  entity_id: !input integral_helper
                  value: 0
              # 1. Zyklus auf 'off' setzen
              - service: input_select.select_option
                data:
                  entity_id: !input cycle_active_input_select
                  option: 'off'
              - service: input_number.set_value
                data:
                  entity_id: !input integral_helper
                  value: 0
              # 2. Modus-Wechsel zu 'Disabled' (mit Puls-Sequenz zur Sicherheit)
              - choose:
                  - conditions: "{{ states(solakon_mode) != 'Disabled' }}"
                    sequence:
                      - service: number.set_value
                        data:
                          entity_id: !input remote_timeout_set_number
                          value: 1
                      - delay: '00:00:01'
                      - service: number.set_value
                        data:
                          entity_id: !input remote_timeout_set_number
                          value: 3599
                      - service: select.select_option
                        data:
                          entity_id: !input mode_select
                          option: 'Disabled'
              # 3. Power Limit auf 0 W setzen (Soft Stopp)
              - service: number.set_value
                data:
                  entity_id: !input active_power_number
                  value: 0
                  
          # FALL C: ZONE 3 - Sicherheits-STOPP (Zus√§tzliche Absicherung, falls Zyklus bereits OFF aber Modus aktiv)
          - conditions:
              - condition: template
                value_template: "{{ states(soc) | float(0) < soc_conservation_limit_int }}"
              - condition: state
                entity_id: !input cycle_active_input_select
                state: 'off'
              - condition: template
                value_template: "{{ states(solakon_mode) != 'INV Discharge (PV Priority)' }}"
            sequence:
              # Modus auf 'Disabled' setzen
              - choose:
                  - conditions: "{{ states(solakon_mode) != 'Disabled' }}"
                    sequence:
                      - service: number.set_value
                        data:
                          entity_id: !input remote_timeout_set_number
                          value: 1
                      - delay: '00:00:01'
                      - service: number.set_value
                        data:
                          entity_id: !input remote_timeout_set_number
                          value: 3599
                      - service: select.select_option
                        data:
                          entity_id: !input mode_select
                          option: 'Disabled'
              # Power Limit auf 0 W setzen
              - service: number.set_value
                data:
                  entity_id: !input active_power_number
                  value: 0
                  
          # FALL D: ZONE 2 - Batterieschonend START (P-Regler aktiv, aber 0 A Entladung)
          - conditions:
              - condition: template
                value_template: "{{ states(soc) | float(0) > soc_conservation_limit_int and states(soc) | float(0) <= soc_fast_limit_int }}"
              - condition: state
                entity_id: !input cycle_active_input_select
                state: 'off'
              - condition: template
                value_template: "{{ states(solakon_mode) != 'INV Discharge (PV Priority)' }}"
              # Nachtcheck: Nur starten wenn NICHT Nacht ODER Funktion deaktiviert
              - condition: template
                value_template: >
                  {{ not night_shutdown_enabled_bool or 
                     (states(solar_power_for_night_check) | float(0)) >= night_pv_threshold }}
            sequence:
              # Logging
              - service: logbook.log
                data:
                  name: Solakon Zonenwechsel
                  message: "üîã Zone 2 aktiviert (Batterieschonend) - SOC: {{ states(soc) }}%"
                  entity_id: !input soc_sensor
              # Integral zur√ºcksetzen bei Zonenwechsel
              - service: input_number.set_value
                data:
                  entity_id: !input integral_helper
                  value: 0
              - service: input_number.set_value
                data:
                  entity_id: !input integral_helper
                  value: 0
              # Modus-Wechsel zu 'INV Discharge PV Priority'
              - choose:
                  - conditions: "{{ states(solakon_mode) != 'INV Discharge (PV Priority)' }}"
                    sequence:
                      - service: number.set_value
                        data:
                          entity_id: !input remote_timeout_set_number
                          value: 1
                      - delay: '00:00:01'
                      - service: number.set_value
                        data:
                          entity_id: !input remote_timeout_set_number
                          value: 3599
                      - service: select.select_option
                        data:
                          entity_id: !input mode_select
                          option: 'INV Discharge (PV Priority)'
          
          # FALL E: NACHT-ABSCHALTUNG (Nur Zone 2 betroffen)
          - conditions:
              - condition: template
                value_template: "{{ is_night }}"
              - condition: state
                entity_id: !input cycle_active_input_select
                state: 'off'  # Nur Zone 2
              - condition: template
                value_template: "{{ states(solakon_mode) == 'INV Discharge (PV Priority)' }}"
            sequence:
              # Logging
              - service: logbook.log
                data:
                  name: Solakon Nachtmodus
                  message: "üåô Nachtabschaltung aktiviert (Zone 2) - PV: {{ states(solar_power_sensor) }}W"
                  entity_id: !input solar_power_sensor
              # Modus auf 'Disabled' setzen
              - service: number.set_value
                data:
                  entity_id: !input remote_timeout_set_number
                  value: 1
              - delay: '00:00:01'
              - service: number.set_value
                data:
                  entity_id: !input remote_timeout_set_number
                  value: 3599
              - service: select.select_option
                data:
                  entity_id: !input mode_select
                  option: 'Disabled'
              # Power Limit auf 0 W
              - service: number.set_value
                data:
                  entity_id: !input active_power_number
                  value: 0
                          
  # -------------------------------------------------------------------------------------------------
  # AKTION E: PI-Regler Logik, Timeout-Refresh UND Entlade-Limit-Absicherung
  # NUR ausf√ºhren wenn Modus aktiv ist UND (Zone 1 ODER Tag)!
  # -------------------------------------------------------------------------------------------------
  - condition: template
    value_template: >
      {{ states(solakon_mode) == 'INV Discharge (PV Priority)' and
         (is_state(cycle_active, 'on') or 
          not night_shutdown_enabled_bool or
          (states(solar_power_for_night_check) | float(0)) >= night_pv_threshold) }}
    
  # ===========================================
  # BLOCK 2: Variablen NUR f√ºr PI-Regler
  # (Werden nur bei aktivem Modus berechnet)
  # ===========================================
  - variables:
      # Grid Power
      grid_power: !input grid_power_sensor
      grid_power_float: "{{ states(grid_power) | float(0) }}"
      
      # Solar Power
      solar_power: !input solar_power_sensor
      
      # Konfiguration
      tolerance_int: !input tolerance
      regulator_factor_float: !input regulator_factor
      ki_factor_float: !input ki_factor
      max_power_change_int: !input max_power_change_per_cycle
      offset_int: !input offset
      max_active_power_limit_int: !input max_active_power_limit
      pv_charge_reserve_int: !input pv_charge_reserve
      
      # PI-Regler-Variablen
      current_active_power: "{{ states(active_power_entity) | float(0) }}"
      
      # Target Offset basiert auf Zone (0 W in Zone 1, Offset_Int in Zone 2)
      target_offset: >
        {% if is_state(cycle_active, 'on') %}
          0
        {% else %}
          {{ offset_int }}
        {% endif %}
      
      # PI-Regler Berechnung
      # 1. Aktueller Fehler
      error: "{{ grid_power_float - target_offset }}"
      
      # 2. Integral mit Anti-Windup
      integral_old: "{{ states(integral_entity) | float(0) }}"
      integral_new_unbounded: "{{ integral_old + error }}"
      integral_new: >
        {{ [[-1000, integral_new_unbounded] | max, 1000] | min }}
      
      # 3. PI-Korrektur (P-Anteil + I-Anteil)
      power_correction_pi: >
        {{ error * regulator_factor_float + integral_new * ki_factor_float }}
      
      # 4. Neuer Power-Sollwert (unbegrenzt)
      new_power_unlimited: "{{ current_active_power + power_correction_pi }}"
      
      # 5. Rate Limiter (max. √Ñnderung pro Zyklus)
      power_diff: "{{ new_power_unlimited - current_active_power }}"
      new_power_rate_limited: >
        {% if power_diff > max_power_change_int %}
          {{ current_active_power + max_power_change_int }}
        {% elif power_diff < -max_power_change_int %}
          {{ current_active_power - max_power_change_int }}
        {% else %}
          {{ new_power_unlimited }}
        {% endif %}
      
      # 6. Max Power Limit in Zone 2 = Max(0, PV - Reserve)
      max_zone_2_limit: >
        {% set pv_minus_reserve = states(solar_power) | float(0) - pv_charge_reserve_int %}
        {{ [0, pv_minus_reserve] | max }}
        
      # 7. Finale Power: Logik in einem Template zusammengefasst
      final_power_calculated: >
        {% set p_regler_power = new_power_rate_limited %}
        {% if is_state(cycle_active, 'on') %}
          {# ZONE 1: Hard Limit #}
          {{ [max_active_power_limit_int, p_regler_power] | min }}
        {% else %}
          {# ZONE 2: Dynamisches PV-Limit #}
          {{ [max_zone_2_limit, p_regler_power] | min }}
        {% endif %}

  # NEU: Zuerst das Entlade-Limit absichern!
  - choose:
      # FALL E.1: Limit f√ºr Zone 1 setzen (Aggressiv)
      - conditions:
          - condition: state
            entity_id: !input cycle_active_input_select
            state: 'on'
          - condition: template
            value_template: >
              {# Pr√ºfe, ob der aktuelle Wert NICHT dem Maximalwert entspricht #}
              {{ states(discharge_current_entity) | float(999) | round(2) != discharge_current_max | float(0) | round(2) }}
        sequence:
          - service: number.set_value
            data:
              entity_id: !input max_discharge_current_number
              value: "{{ discharge_current_max }}"
              
      # FALL E.2: Limit f√ºr Zone 2 setzen (Batterieschonend = 0 A)
      - conditions:
          - condition: state
            entity_id: !input cycle_active_input_select
            state: 'off'
          - condition: template
            value_template: >
              {# Pr√ºfe, ob der aktuelle Wert NICHT 0 A entspricht #}
              {{ states(discharge_current_entity) | float(999) | round(2) != 0 }}
        sequence:
          - service: number.set_value
            data:
              entity_id: !input max_discharge_current_number
              value: 0

  # 2. Kombinierte Aktion: Integral speichern, Timeout-Reset ODER Power Limit setzen
  - choose: 
      # Fall A: Integral speichern (immer wenn P-Regler l√§uft und Fehler > Toleranz)
      - conditions:
          - condition: template
            value_template: "{{ error | abs > tolerance_int }}"
        sequence:
          - service: input_number.set_value
            data:
              entity_id: !input integral_helper
              value: "{{ integral_new }}"
      
      # Fall B: Timeout-Reset erforderlich
      - conditions:
          - condition: template
            value_template: "{{ states(timeout_countdown) | int(9999) < 120 }}"
        sequence:
          - service: number.set_value
            data:
              entity_id: !input remote_timeout_set_number
              value: 3599
          - delay: '00:00:00.05' 
              
  # 3. Power Limit setzen (Nur wenn Toleranz √ºberschritten ist)
  - condition: template
    value_template: "{{ error | abs > tolerance_int }}"
  
  - service: number.set_value
    data:
      entity_id: !input active_power_number
      value: "{{ [0, final_power_calculated] | max | round(0) }}"
