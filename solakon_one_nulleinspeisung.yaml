blueprint:
  name: Solakon ONE Nulleinspeisung‚ö° (V142)
  description: |
    **Detaillierte Funktionsbeschreibung: Dynamische Nulleinspeisung mit SOC-Zonen-Logik**

    Dieser Blueprint regelt die AC-Ausgangsleistungsbegrenzung (AC-Output-Limit) des Solakon ONE Wechselrichters. Ziel ist die dynamische **Nulleinspeisung** durch einen Proportional-Regler (P-Regler), w√§hrend gleichzeitig die Batterie durch eine **dreistufige Ladestands-Logik (SOC)** effizient verwaltet wird.

    ---
    ### üß† P-Regler & Steuerungslogik
    * **Messprinzip (P-Regelung):** Die Steuerung arbeitet als **Proportional-Regler (P-Regler)** auf Basis der Entit√§t **Shelly/Netz-Leistungssensor**. **WICHTIG:** Es wird davon ausgegangen, dass **positive Werte Netzbezug** und **negative Werte Netzeinspeisung** bedeuten.
      * **Positiver Netzleistung (Bezug):** Erh√∂hung der AC-Output-Leistung.
      * **Negative Netzleistung (Einspeisung):** Verringerung der AC-Output-Leistung.
    * **Korrekturneigung:** Die Aggressivit√§t der Reaktion wird √ºber den **Anpassungs-Faktor** gesteuert.
    * **Trigger:** Die Automatisierung wird ausgel√∂st durch √Ñnderungen der Netzleistung (mit 3s Stabilit√§t), SOC-Schwellen, Moduswechsel und den Remote Timeout Countdown Sensor.
    * **Leistungsbegrenzung:** Die geregelte Ausgangsleistung ist durch einen **oberen Grenzwert** (`max_active_power_limit`) und einen **hardkodierten unteren Grenzwert von 0 W** abgesichert.

    ---
    ### üîã Dreistufige SOC-Zonen-Logik

    #### 1. Schnelle Regelung & Entladezyklus (SOC > Obere Schwelle ODER Zyklus Aktiv)
    * **Bedingung:** Der SOC liegt √ºber der **Oberen Schwelle** (`soc_fast_limit`, Standard: 50%) ODER der Entladezyklus ist bereits aktiv.
    * **Modus:** "INV Discharge (PV Priority)".
    * **Regelung:** **Aggressive P-Regelung** mit einem **Nullpunkt-Offset von 0 W**. Steuert die Entladung und die exakte Nulleinspeisung.
    * **Remote Timeout:** Der Timer wird bei Unterschreitung von 120s zur√ºckgesetzt (auf 3599s).

    #### 2. Batterieschonende Regelung (Zwischen-SOC und Zyklus Inaktiv)
    * **Bedingung:** Der SOC liegt zwischen der **Unteren Schwelle** (20%) und der **Oberen Schwelle** (50%), und der Entladezyklus ist inaktiv.
    * **Modus:** "INV Discharge (PV Priority)".
    * **Regelung:** **Aktive P-Regelung** mit verschobenem Nullpunkt und Lade-Priorit√§t. Der **Nullpunkt-Offset** (`nulleinspeisung_offset`, Standard: -30 W) verschiebt das Regelziel in den leichten **Netzbezug**.
    * **PV-Abfall-Regelung:** Die Entladeleistung wird zus√§tzlich um die **PV-Ladereserve** (`pv_charge_reserve`) reduziert. Diese Logik wirkt als dynamische Obergrenze, um die Lade-Priorit√§t zu erzwingen.
    * **Remote Timeout:** Der Timer wird auch in dieser Zone bei Unterschreitung von 120s zur√ºckgesetzt.

    #### 3. Sicherheitsstopp (SOC <= Untere Schwelle)
    * **Bedingung:** SOC f√§llt unter die **Untere Schwelle** (`soc_conservation_limit`, Standard: 20%).
    * **Modus:** "Disabled".
    * **Aktion:** Die AC-Ausgangsleistung wird sofort auf **0 W** gesetzt und der Entladezyklus beendet.
  domain: automation
  author: AI-Assistent
  input:
    shelly_grid_power_sensor:
      name: Shelly/Netz-Leistungssensor (Shelly 3EM, etc.)
      description: Der Sensor, der die Netzleistung misst. (Muss 'power' device_class
        haben)
      selector:
        entity:
          filter:
            - domain:
                - sensor
              device_class:
                - power
          multiple: false
          reorder: false
    solakon_solar_power_sensor:
      name: Solakon ONE - Solarleistung (PV-Erzeugung)
      description: |
        Der Sensor, der die aktuelle Solarerzeugung in Watt anzeigt. **(Standard-Entit√§t: `sensor.solakon_one_total_pv_power`)**
      default: sensor.solakon_one_total_pv_power
      selector:
        entity:
          filter:
            - domain:
                - sensor
              device_class:
                - power
          multiple: false
          reorder: false
    solakon_soc_sensor:
      name: Solakon ONE - Batterieladestand (SOC)
      description: |
        Der SOC-Sensor des Solakon ONE (%). **(Standard-Entit√§t: `sensor.solakon_one_battery_soc`)**
      default: sensor.solakon_one_battery_soc
      selector:
        entity:
          domain:
            - sensor
          multiple: false
          reorder: false
    solakon_power_limit_number:
      name: Solakon ONE - Ausgangsleistungsregler (AC-Output)
      description: |
        Die Entit√§t zur Steuerung der Lade-/Entladeleistung (Soll-Wert). **(Standard-Entit√§t: `number.solakon_one_remote_active_power`)**
      default: number.solakon_one_remote_active_power
      selector:
        entity:
          domain:
            - number
          multiple: false
          reorder: false
    solakon_mode_select:
      name: Solakon ONE - Betriebsmodus-Auswahl
      description: |
        Die Entit√§t zur Steuerung des Betriebsmodus. **(Standard-Entit√§t: `select.solakon_one_remote_control_mode`)**
      default: select.solakon_one_remote_control_mode
      selector:
        entity:
          domain:
            - select
          multiple: false
          reorder: false
    solakon_mode_reset_timer_entity:
      name: Modus-Reset-Timer-Entit√§t (Solakon ONE - **Setter**)
      description: |
        Die Solakon ONE **Number** Entit√§t, die die Zeit (in Sekunden, max. 3600) steuert. Wird zum **Setzen/Zur√ºcksetzen** des Remote-Timeouts verwendet. **(Standard-Entit√§t: `number.solakon_one_remote_timeout_set`)**
      default: number.solakon_one_remote_timeout_set
      selector:
        entity:
          domain:
            - number
          multiple: false
          reorder: false
    solakon_timeout_countdown_sensor:
      name: Remote Timeout Countdown Sensor (Solakon ONE - **Ausleser**) üü¢
      description: |
        Der **Sensor** oder die **Number** Entit√§t, die den aktuell verbleibenden Countdown-Wert des Remote Timeouts in Sekunden anzeigt.
      default: sensor.solakon_one_remote_timeout_countdown
      selector:
        entity:
          filter:
            - domain:
                - sensor
                - number
          multiple: false
          reorder: false
    soc_entladezyklus_aktiv:
      name: Entladezyklus-Zustandsspeicher (Input Select/Dropdown)
      description: Input Select Helfer (MUSS Optionen 'on' und 'off' enthalten).
      default: input_select.soc_entladezyklus_status
      selector:
        entity:
          domain:
            - input_select
          multiple: false
          reorder: false
    soc_fast_limit:
      name: SOC-Schwelle "Schnelle Regelung" (z.B. 50%)
      default: 50
      description: Der obere SOC-Wert (z.B. 50%). Wird dieser √ºberschritten, startet
        der aggressive Entladezyklus.
      selector:
        number:
          min: 21.0
          max: 100.0
          step: 1.0
          unit_of_measurement: '%'
          mode: slider
    soc_conservation_limit:
      name: SOC-Schwelle "Lade-Priorit√§t" (z.b. 20%)
      default: 20
      description: Der untere SOC-Wert (z.B. 20%). Wird dieser unterschritten, wird
        auf "Disabled" umgeschaltet.
      selector:
        number:
          min: 0.0
          max: 49.0
          step: 1.0
          unit_of_measurement: '%'
          mode: slider
    nulleinspeisung_toleranz:
      name: Toleranzbereich (Halbbreite)
      default: 25
      description: Der zul√§ssige Bereich in Watt um den Null- bzw. Offset-Punkt.
      selector:
        number:
          min: 10.0
          max: 200.0
          step: 10.0
          unit_of_measurement: W
          mode: slider
    anpassungs_faktor:
      name: Regelungs-Faktor (Korrektur-Geschw.)
      default: 1.5
      description: Definiert die Aggressivit√§t des P-Reglers.
      selector:
        number:
          min: 0.5
          max: 3.0
          step: 0.1
          mode: slider
    nulleinspeisung_offset:
      name: Nullpunkt-Offset (Neg. erzwingt Bezug)
      default: -30
      description: Negative Watt-Zahl, um den Nullpunkt unter SOC-Schwelle zu verschieben.
        (Wird nur in der konservativen Zone 2 genutzt)
      selector:
        number:
          min: -100.0
          max: 0.0
          step: 10.0
          unit_of_measurement: W
          mode: slider
    pv_charge_reserve:
      name: üîã PV-Ladereserve (Zwischen-SOC)
      default: 50
      description: |
        Die in Watt (W) zu reservierende PV-Leistung. Dieser Puffer kompensiert
        interne Wandlerverluste und stellt somit eine garantierte Batterieladung
        sicher. (Wird nur in der konservativen Zone 2 genutzt)
      selector:
        number:
          min: 0.0
          max: 500.0
          step: 10.0
          unit_of_measurement: W
          mode: slider
    max_active_power_limit:
      name: Maximale Ausgangsleistung (Hard Limit)
      default: 800
      description: Das absolute Limit f√ºr die AC-Ausgangsleistung in Watt, unabh√§ngig
        von der Regelung. (Sollte dem Maximalwert Ihres Solakon ONE entsprechen)
      selector:
        number:
          min: 0.0
          max: 1200.0
          step: 10.0
          unit_of_measurement: W
          mode: slider
  source_url: https://github.com/D4nte85/Solakon-One-Nulleinspeisung-Blueprint-homeassistant/edit/main/solakon_one_nulleinspeisung.yaml
mode: queued
max_exceeded: silent
variables:
  # Die Variablendeklaration folgt der einzig sicher funktionierenden Weise, wie Blueprints
  # in Home Assistant funktionieren.
  solakon_mode: !input solakon_mode_select
  solakon_soc_sensor: !input solakon_soc_sensor
  pv_power_sensor: !input solakon_solar_power_sensor
  grid_power_sensor: !input shelly_grid_power_sensor
  timer_entity: !input solakon_mode_reset_timer_entity
  countdown_sensor: !input solakon_timeout_countdown_sensor
  solakon_power_limit_number: !input solakon_power_limit_number
  soc_start_limit: !input soc_fast_limit
  soc_stop_limit: !input soc_conservation_limit
  tolerance: !input nulleinspeisung_toleranz
  adj_factor: !input anpassungs_faktor
  offset_value: !input nulleinspeisung_offset
  cycle_active_helper: !input soc_entladezyklus_aktiv
  pv_reserve: !input pv_charge_reserve
  max_limit: !input max_active_power_limit
trigger:
  - platform: state
    entity_id: !input shelly_grid_power_sensor
    for:
      seconds: 3
  - platform: state
    entity_id: !input solakon_solar_power_sensor
    for:
      seconds: 3
  - platform: numeric_state
    entity_id: !input solakon_soc_sensor
    above: !input soc_fast_limit
  - platform: numeric_state
    entity_id: !input solakon_soc_sensor
    below: !input soc_conservation_limit
  - platform: state
    entity_id: !input solakon_mode_select
  - platform: numeric_state
    entity_id: !input solakon_timeout_countdown_sensor
    below: 150
condition: []
action:
  - variables:
      # Vorbereitende Variablen f√ºr die Validierung
      soc_value: '{{ states(solakon_soc_sensor) | float(-1) }}'
      timeout_value: '{{ states(countdown_sensor) | int(-1) }}'
      error_log_message: "Solakon ONE Blueprint Fehler:"

  # --- Validierung der Eingaben ---
  - choose:
      # 1. Fall: SOC-Schwellenwerte sind ung√ºltig/vertauscht
    - conditions:
      - condition: template
        value_template: >
          {{ soc_start_limit | float(0) <= soc_stop_limit | float(0) }}
      sequence:
      - service: system_log.write
        data:
          logger: automation.solakon_nulleinspeisung
          level: error
          message: >
            {{ error_log_message }} Die obere SOC-Schwelle ({{ soc_start_limit }}%) muss
            gr√∂√üer sein als die untere SOC-Schwelle ({{ soc_stop_limit }}%).
            Bitte passen Sie die Werte an. Automatisierung gestoppt.
      - stop: Schwellenwerte ung√ºltig
        
      # 2. Fall: Kritische Entit√§ten sind nicht verf√ºgbar
    - conditions:
      - condition: template
        value_template: >
          {{ soc_value == -1 or timeout_value == -1 or
            is_state(grid_power_sensor, 'unavailable') or
            is_state(solakon_power_limit_number, 'unavailable') }}
      sequence:
      - service: system_log.write
        data:
          logger: automation.solakon_nulleinspeisung
          level: error
          message: >
            {{ error_log_message }} Eine oder mehrere kritische Entit√§ten sind UNVERF√úGBAR
            oder haben ung√ºltige Werte. Automatisierung gestoppt.
      - stop: Kritische Entit√§t nicht verf√ºgbar
        
    default: []

  # --- Ende des Validierungs-Choose-Blocks ---

  - variables:
      # Globale Variablen f√ºr die Regelungslogik
      cycle_active: '{{ is_state(cycle_active_helper, ''on'') }}'
      grid_power: '{{ states(grid_power_sensor) | float(0) }}'
      pv_power: '{{ states(pv_power_sensor) | float(0) }}'
      current_mode: '{{ states(solakon_mode) }}'
  - choose:
      # --- 1. Schnelle Regelung & Entladezyklus Start (SOC > Obere Schwelle) ---
    - conditions:
      - condition: template
        value_template: '{{ soc_value > soc_start_limit | float(50) and not cycle_active
          }}'
      sequence:
      - service: input_select.select_option
        target:
          entity_id: !input soc_entladezyklus_aktiv
        data:
          option: 'on'
      - condition: template
        value_template: '{{ current_mode != ''INV Discharge (PV Priority)'' }}'
      - service: select.select_option
        target:
          entity_id: !input solakon_mode_select
        data:
          option: INV Discharge (PV Priority)
      - service: number.set_value
        target:
          entity_id: !input solakon_mode_reset_timer_entity
        data:
          value: 3599
      # --- 2. Sicherheitsstopp Ende & Entladezyklus Stopp (SOC <= Untere Schwelle) ---
    - conditions:
      - condition: template
        value_template: '{{ soc_value <= soc_stop_limit | float(20) and cycle_active
          }}'
      sequence:
      - service: input_select.select_option
        target:
          entity_id: !input soc_entladezyklus_aktiv
        data:
          option: 'off'
      - condition: template
        value_template: '{{ current_mode != ''Disabled'' }}'
      - service: select.select_option
        target:
          entity_id: !input solakon_mode_select
        data:
          option: Disabled
      - service: number.set_value
        target:
          entity_id: !input solakon_power_limit_number
        data:
          value: 0
      # --- 3. Sicherheitsstopp (SOC < Untere Schwelle UND Zyklus Inaktiv) ---
    - conditions:
      - condition: template
        value_template: '{{ soc_value < soc_stop_limit | float(20) and not cycle_active and current_mode != ''Disabled'' }}'
      sequence:
      - service: select.select_option
        target:
          entity_id: !input solakon_mode_select
        data:
          option: Disabled
      - service: number.set_value
        target:
          entity_id: !input solakon_power_limit_number
        data:
          value: 0
      # --- 4. Batterieschonende Regelung (Zwischen-SOC UND Zyklus Inaktiv) ---
    - conditions:
      - condition: template
        value_template: '{{ soc_value > soc_stop_limit | float(20) and soc_value <= soc_start_limit | float(50) and not cycle_active and current_mode != ''INV Discharge (PV Priority)'' }}'
      sequence:
      - service: select.select_option
        target:
          entity_id: !input solakon_mode_select
        data:
          option: INV Discharge (PV Priority)
      - service: number.set_value
        target:
          entity_id: !input solakon_power_limit_number
        data:
          value: 0
      # --- 5. Aktive Regelung (Nur wenn Modus INV Discharge (PV Priority) aktiv ist) ---
    - conditions:
      - condition: template
        value_template: '{{ current_mode == "INV Discharge (PV Priority)" }}'
      sequence:
      # Timeout Reset (Priorisierte Impulsaktion)
      - variables:
          # Deklarieren Sie die Variablen, die f√ºr den Reset ben√∂tigt werden
          soc_zone_1_or_2: >
              {{
                cycle_active or
                (soc_value >= soc_stop_limit | float(20) and soc_value <= soc_start_limit | float(50))
              }}
      - choose: # Timeout Reset
        - conditions:
          - condition: template
            value_template: '{{ soc_zone_1_or_2 }}'
          - condition: template
            value_template: '{{ timeout_value < 120 and timeout_value != -1 }}'
          sequence:
          - service: number.set_value
            target:
              entity_id: !input solakon_mode_reset_timer_entity
            data:
              value: 1
          - delay:
              milliseconds: 300
          - service: number.set_value
            target:
              entity_id: !input solakon_mode_reset_timer_entity
            data:
              value: 3599
        default: []

      # P-Regelungsvariablen (f√ºr die P-Regelungs-Aktionen)
      - variables:
          tolerance_float: '{{ tolerance | float(25) }}'
          # Offset-Wert: Negativ im Input wird zu POSITIV im Offset (Bezug erzwingen)
          offset: '{{ offset_value | float(-30) * -1 if soc_value < soc_start_limit | float(50) and not cycle_active else 0.0 }}'
          tolerance_high: '{{ offset + tolerance_float }}'
          tolerance_low: '{{ offset - tolerance_float }}'
          current_limit: '{{ states(solakon_power_limit_number) | float(0) }}'
          
      - choose:
        # --- 5a. Aggressive P-Regelung (Zyklus Aktiv oder SOC Hoch - Zone 1) ---
        - conditions:
          - condition: template
            value_template: '{{ cycle_active or soc_value > soc_start_limit | float(50) }}'
          sequence:
          - variables:
              # Abweichung ist grid_power - Offset (hier 0)
              reg_abweichung: '{{ grid_power | float(0) - offset | float(0) }}'
              new_limit_calc: '{{ current_limit + reg_abweichung * adj_factor }}'
          - condition: template
            value_template: >
              {{ grid_power > tolerance_high or
                grid_power < tolerance_low }}
          - service: number.set_value
            target:
              entity_id: !input solakon_power_limit_number
            data:
              # Begrenzung: Max. des berechneten Werts und 0, dann min. des globalen Max-Limits
              value: '{{ [ min(new_limit_calc | float(0), max_limit | float(800)), 0 ] | max | round(0) }}'
            
        # --- 5b. Batterieschonende P-Regelung (Zwischen-SOC und Zyklus Inaktiv - Zone 2) ---
        - conditions:
          - condition: template
            value_template: >
              {{ not cycle_active and
                soc_value >= soc_stop_limit | float(20) and
                soc_value <= soc_start_limit | float(50) }}
          sequence:
          - variables:
              # Abweichung ist grid_power - Offset (hier der NEU berechnete positive Offset-Wert, z.B. +30)
              reg_abweichung: '{{ grid_power | float(0) - offset | float(30) }}'
              new_limit_calc: '{{ current_limit + reg_abweichung * adj_factor }}'
          - condition: template
            # F√ºhren Sie die Regelung nur aus, wenn die Netzleistung au√üerhalb des tolerierten Bereichs liegt
            value_template: >
              {{ grid_power > tolerance_high or
                grid_power < tolerance_low }}
          - service: number.set_value
            target:
              entity_id: !input solakon_power_limit_number
            data:
              # Die Entladegrenze in Zone 2 kombiniert die P-Regelung mit der dynamischen PV-Ladereserve.
              value: >
                {% set calculated_limit = new_limit_calc | float(0) %}
                
                {# Definiert die Obergrenze: Minimum aus Hard Limit und max(0, PV-Power - PV-Reserve). #}
                {% set dynamic_max = min(max_limit | float(800), max(states(pv_power_sensor) | float(0) - pv_reserve | float(50), 0) ) %}
                
                {# Sendet das Minimum des P-Regler-Werts und der dynamischen Obergrenze, mindestens 0 W. #}
                {{ max(min(calculated_limit, dynamic_max), 0) | round(0) }}
